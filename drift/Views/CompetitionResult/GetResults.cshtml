@model System.Collections.Generic.List<drift.Data.Entity.CompetitionResultDto>

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@{
    var paticipants = Model.ToList();
    paticipants.Sort((a, b) => b.MainPhaseScore.CompareTo(a.MainPhaseScore));
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="https://www.aropupu.fi/bracket/jquery-bracket/dist/jquery.bracket.min.js"></script>

<script type="text/javascript">

function SelectWinners()
{
    let topEightIds = ['#1-1','#5-1','#9-1','#13-1','#17-1','#21-1','#25-1','#29-1'];
    let topFourIds = ['#3-2','#11-2','#19-2','#27-2','#35-1'];
    let topTwoIds = ['#7-3','#23-3'];
    let winnerId = ['#15-4'];
    topEightIds.forEach((topEight)=>{
        let i = parseInt(topEight.substr(topEight.indexOf('#')+1,topEight.indexOf('-')-1));
        let firstParticpantNumber =parseInt( $(`#${i-1}-0`).html());
        let secondParticpantNumber = parseInt($(`#${i+1}-0`).html());
        let  res = Math.min(firstParticpantNumber,secondParticpantNumber);
        $(`${topEight}`).html(res);
    });
    topFourIds.forEach((topFour)=>{
             let i = parseInt(topFour.substr(topFour.indexOf('#')+1,topFour.indexOf('-')-1));
             let firstParticpantNumber =parseInt( $(`#${i-2}-1`).html());
             let secondParticpantNumber = parseInt($(`#${i+2}-1`).html());
             let  res = Math.min(firstParticpantNumber,secondParticpantNumber);
             $(`${topFour}`).html(res);
    });
    topTwoIds.forEach((topTwo)=>{
             let i = parseInt(topTwo.substr(topTwo.indexOf('#')+1,topTwo.indexOf('-')-1));
             let firstParticpantNumber =parseInt( $(`#${i-4}-2`).html());
             let secondParticpantNumber = parseInt($(`#${i+4}-2`).html());
             let  res = Math.min(firstParticpantNumber,secondParticpantNumber);
             $(`${topTwo}`).html(res);
        });
     let firstParticpantNumber =parseInt( $(`#7-3`).html());
     let secondParticpantNumber = parseInt($(`#23-3`).html());
     let  res = Math.min(firstParticpantNumber,secondParticpantNumber);
     $(`${winnerId}`).html(res);
    
}

function getRandomArbitrary(min, max) {
  return Math.random() * (max - min) + min;
}
 

  var model = '@Html.Raw(Json.Serialize(paticipants))';
    console.log(model);
  var data = JSON.parse(model);
let minimalData = {
     teams: [
       [data[0].participantName, data[1].participantName],
       [data[2].participantName, data[3].participantName],
       [data[4].participantName, data[5].participantName],
       [data[6].participantName, data[7].participantName],
       [data[8].participantName, data[9].participantName],
       [data[10].participantName, data[11].participantName],
       [data[12].participantName, data[13].participantName],
       [data[14].participantName, data[15].participantName]
     ],
     results: [
         [
           [[data[0].qualificationScore, data[1].qualificationScore], [data[2].qualificationScore, data[3].qualificationScore],[data[4].qualificationScore, data[5].qualificationScore], [data[6].qualificationScore, data[7].qualificationScore],[data[8].qualificationScore, data[9].qualificationScore],[data[10].qualificationScore, data[11].qualificationScore],[data[12].mainPhaseScore, data[13].qualificationScore], [data[14].qualificationScore, data[15].qualificationScore]],
           [[data[0].mainPhaseScore, data[2].mainPhaseScore], [data[4].mainPhaseScore, data[6].mainPhaseScore],[data[8].mainPhaseScore, data[10].mainPhaseScore],[data[12].mainPhaseScore, data[14].mainPhaseScore]],
           [[data[0].mainPhaseScore, data[4].mainPhaseScore], [data[8].mainPhaseScore, data[12].mainPhaseScore]],
            [[data[0].mainPhaseScore, data[8].mainPhaseScore],[data[4].mainPhaseScore, data[12].mainPhaseScore]]
         ]
     ]
  }
 
      
   $(document).ready(function ($) {
      $('.something').bracket({
             init: minimalData,
            });
   })

</script>
<div class="something"></div>
<table class="table">
    <thead>
    <tr>
        <th scope="col">Place</th>
        <th scope="col">UserName</th>
        <th scope="col">Number</th>
        <th scope="col">Car</th>
        <th scope="col">Qualification Score</th>
        <th scope="col">Main Phase Score</th>
        <th scope="col">Total Score</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var result in @Model)
    {
        <tr>
            <th scope="row">@result.Place</th>
            <td>@result.ParticipantName</td>
            <td>@result.CarNumber</td>
            <td>@result.ParticipantName</td>
            <td>@result.QualificationScore</td>
            <td>@result.MainPhaseScore</td>
            <td>@result.TotalScore</td>
        </tr>
    }
    </tbody>
</table>